((all-the-icons :repo "domtronn/all-the-icons.el" :fetcher github :files (:defaults "data")) (all-the-icons-dired :repo "jtbm37/all-the-icons-dired" :fetcher github) (ccls :repo "MaskRay/emacs-ccls" :fetcher github) (company :repo "company-mode/company-mode" :fetcher github) (dired-subtree :fetcher github :repo "Fuco1/dired-hacks" :files ("dired-subtree.el")) (evil-leader :repo "cofi/evil-leader" :fetcher github) (evil-magit :repo "emacs-evil/evil-magit" :fetcher github) (evil-surround :repo "emacs-evil/evil-surround" :fetcher github :old-names (surround)) (helm :repo "emacs-helm/helm" :fetcher github :files ("*.el" "emacs-helm.sh" (:exclude "helm.el" "helm-lib.el" "helm-source.el" "helm-multi-match.el" "helm-core-pkg.el"))) (helm-ag :repo "emacsorphanage/helm-ag" :fetcher github) (helm-projectile :repo "bbatsov/helm-projectile" :fetcher github) (lsp-ui :repo "emacs-lsp/lsp-ui" :fetcher github :files (:defaults "lsp-ui-doc.html" "resources/*")) (magit :fetcher github :repo "magit/magit" :files ("lisp/magit" "lisp/magit*.el" "lisp/git-rebase.el" "Documentation/magit.texi" "Documentation/AUTHORS.md" "LICENSE" (:exclude "lisp/magit-libgit.el"))) (neotree :repo "jaypei/emacs-neotree" :fetcher github :files (:defaults "icons")) nil (projectile :repo "bbatsov/projectile" :fetcher github :files ("projectile.el")) (quelpa :repo "quelpa/quelpa" :fetcher github) (rust-mode :repo "rust-lang/rust-mode" :fetcher github) (rustic :repo "brotzeit/rustic" :fetcher github) (tide :fetcher github :repo "ananthakumaran/tide" :files (:defaults "tsserver")) (which-key :repo "justbur/emacs-which-key" :fetcher github))