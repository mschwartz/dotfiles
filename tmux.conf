set-environment -g PATH "/usr/local/bin:/usr/bin"
# bind leader/prefix to C-a instead of C-b
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set-option -sa terminal-overrides ',$TERM:RGB'
# colors
#setw -g mode-bg black
set-option -g default-terminal "tmux-256color" #"xterm-256color" # "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
#set-option -g pane-active-border-fg green
#set -g default-command "which reattach-to-user-namespace >/dev/null 2>&1 && reattach-to-user-namespace -l zsh || zsh"
#set -g default-command "reattach-to-user-namespace -l zsh || zsh"

set-option -s escape-time 10
set-option -g set-titles on
set-option -g set-titles-string "#H:#T"
set-option -g status-interval 30
set-window-option -g automatic-rename on
set -g default-terminal "xterm-256color"
set -g history-limit 100000
set -g focus-events on

set -g status-keys vi
setw -g mode-keys vi
#setw -g monitor-activity-on

# large history
set-option -g history-limit 10000


# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
#set-window-option -g window-status-current-fg white
#setw -g window-status-current-attr reverse

# vim style X clipboard integration
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key -n C-Space resize-pane -Z

set-option -g mouse on
# setw -g mode-mouse on
set -g mouse on
# set-window-option -g mode-mouse on


bind r source-file ~/.tmux.conf \; display-message "Configuration reloaded."

#set -g @plugin 'tmux/plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'tmux-plugins/tmux-sidebar'

#set -g @sidebar-tree-command 'tree -C'

if-shell "test -f ~/.tmux/tmuxline" "source ~/.tmux/tmuxline"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'

